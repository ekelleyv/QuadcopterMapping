<launch>

  <node pkg="tf" type="static_transform_publisher" name="marker_0_broadcaster" args="0 0 0 0 0 0 world marker_0 100" />

  <node pkg="tf" type="static_transform_publisher" name="marker_4_broadcaster" args="4 0 0 0 0 0 world marker_4 100" />

  <node pkg="tf" type="static_transform_publisher" name="marker_2_broadcaster" args="4 2.5 0 0 0 0 world marker_2 100" />

  <node pkg="tf" type="static_transform_publisher" name="marker_3_broadcaster" args="0 2.5 0 0 0 0 world marker_3 100" />

    <node pkg="tf" type="static_transform_publisher" name="marker_1_broadcaster" args="2 1.25 0 0 0 0 world marker_1 100" />

  <node pkg="tf" type="static_transform_publisher" name="world_broadcaster" args="0 0 0 0 0 0 world /ardrone/ardrone_base_link 100" />

  <node name="ardrone_driver" pkg="ardrone_autonomy" type="ardrone_driver" output="screen" clear_params="true">
	    <param name="outdoor" value="0" />
	    <param name="max_bitrate" value="4000" />
	    <param name="bitrate" value="4000" />
	    <param name="navdata_demo" value="0" />
	    <param name="flight_without_shell" value="0" />
	    <param name="altitude_max" value="3000" />
        <param name="altitude_min" value="50" />
        <param name="euler_angle_max" value="0.21" />
        <param name="control_vz_max" value="700" />
	    <param name="control_yaw" value="1.75" />
	    <param name="detect_type" value="10" />
	    <param name="enemy_colors" value="3" />
	    <param name="detections_select_h" value="32" />
	    <param name="detections_select_v_hsync" value="128" />
	    <param name="enemy_without_shell" value="0" />
	    <param name="do_imu_caliberation" value="true" />
	    <param name="tf_prefix" value="ardrone" />
        <!-- Covariance Values (3x3 matrices reshaped to 1x9)-->
        <rosparam param="cov/imu_la">[0.1, 0.0, 0.0, 0.0, 0.1, 0.0, 0.0, 0.0, 0.1]</rosparam>
        <rosparam param="cov/imu_av">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 1.0]</rosparam>
        <rosparam param="cov/imu_or">[1.0, 0.0, 0.0, 0.0, 1.0, 0.0, 0.0, 0.0, 100000.0]</rosparam>
	</node>
 <node name="ar_pose" pkg="ar_pose" type="ar_multi" respawn="false" output="screen">
	<param name="marker_pattern_list" type="string" value="$(find ar_pose)/data/object_4x4"/>
	<param name="threshold" type="int" value="100"/>
	<param name="camera_image_topic" type="string" value="/ardrone/bottom/image_raw"/>
	<param name="camera_info_topic" type="string" value="/ardrone/bottom/camera_info"/>
</node>

<node name="command_controller.py" pkg="quadcopterCode" type="command_controller.py" respawn="false" output="screen" />

</launch>
